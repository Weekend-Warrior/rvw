% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{vwtest}
\alias{vwtest}
\title{Compute predictions using Vowpal Wabbit model}
\usage{
vwtest(vwmodel, data, probs_path = "", readable_model = NULL,
  quiet = FALSE, passes = 1L, cache = FALSE, namespaces = NULL,
  keep_space = NULL, targets = NULL, probabilities = NULL,
  weight = NULL, base = NULL, tag = NULL, multiline = NULL)
}
\arguments{
\item{vwmodel}{Model of vw class to train}

\item{data}{[string or data.frame] Path to training data in .vw plain text format or data.frame.
If \code{[data.frame]} then will be parsed using \code{df2vw} function.}

\item{probs_path}{Path to file where to save predictions}

\item{readable_model}{Print trained model in human readable format ("hashed") 
and also with human readable features ("inverted")}

\item{quiet}{Do not print anything to the console}

\item{namespaces}{[list or yaml file] For \code{df2vw}. Name of each namespace and
each variable for each namespace can be a R list, or a YAML
file example namespace with the IRIS database: namespaces =
list(sepal = list('Sepal.Length', 'Sepal.Width'), petal = list('Petal.Length',
'Petal.Width') this creates 2 namespaces (sepal
and petal) containing the features defined by elements of this lists.}

\item{keep_space}{[string vector] For \code{df2vw}. Keep spaces for this features
Example:"FERRARI 4Si"
With \code{keep_space} will be "FERRARI 4Si" and will be treated as two features
Without \code{keep_space} will be "FERRARI_4Si" and will be treated as one feature}

\item{targets}{[string or string vector] For \code{df2vw}.
If \code{[string]} then will be treated as vector with real number labels for regular VW input format. 
If \code{[string vector]} then will be treated as vectors with class costs for wap and csoaa 
multi-class classification algorithms or as vectors with actions for Contextual Bandit algorithm.}

\item{probabilities}{[string vector] For \code{df2vw}. Vectors with action probabilities for Contextual Bandit algorithm.}

\item{weight}{[string] For \code{df2vw}. Weight (importance) of each line of the dataset.}

\item{base}{[string] For \code{df2vw}. Base of each line of the dataset. Used for residual regression.}

\item{tag}{[string] For \code{df2vw}. Tag of each line of the dataset.}

\item{multiline}{[integer] number of labels (separate lines) for multilines examle}
}
\value{
Numerical vector containing predictions
}
\description{
vwtest computes predictions using VW model from \code{\link{vwsetup}}
}
\examples{
ext_train_data <- system.file("extdata", "binary_train.vw", package = "rvwgsoc")
ext_test_data <- system.file("extdata", "binary_valid.vw", package = "rvwgsoc") 
test_vwmodel <- vwsetup()
vwtrain(test_vwmodel, data = ext_train_data)
vwtest(test_vwmodel, data = ext_test_data)
}
